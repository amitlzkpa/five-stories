<?xml version="1.0" encoding="utf-8"?><svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" viewBox="0 0 100 100" y="0px" x="0px" id="圖層_1" version="1.1" width="200px" height="200px" style="width:100%;height:100%;background-size:initial;background-repeat-y:initial;background-repeat-x:initial;background-position-y:initial;background-position-x:initial;background-origin:initial;background-image:initial;background-color:rgb(255, 255, 255);background-clip:initial;background-attachment:initial;animation-play-state:paused"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><g class="ldl-scale" style="transform-origin:50% 50%;transform:rotate(0deg) scale(0.8, 0.8);animation-play-state:paused"><polygon points="36.09,63.34 26.09,51.11 18.09,51.11 28.09,63.34" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#F47E5F" style="fill:rgb(244, 126, 95);animation-play-state:paused"/>
<polygon points="59.59,63.34 69.59,51.11 77.59,51.11 67.59,63.34" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#F47E5F" style="fill:rgb(244, 126, 95);animation-play-state:paused"/>
<line y2="59.85" x2="53.04" y1="65.59" x1="39.18" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<line y2="56.54" x2="52.29" y1="58.49" x1="37.42" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<line y2="53.14" x2="52.42" y1="51.18" x1="37.55" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<line y2="49.9" x2="53.42" y1="44.16" x1="39.57" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<rect height="32" width="40" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#E15C64" y="63.34" x="28.09" style="fill:rgb(225, 92, 100);animation-play-state:paused"/>
<path d="M49.11,71.52l1.82,3.68c0.17,0.34,0.49,0.57,0.86,0.63l4.06,0.59c0.94,0.14,1.32,1.29,0.64,1.96l-2.94,2.86 c-0.27,0.26-0.39,0.64-0.33,1.01l0.69,4.04c0.16,0.94-0.82,1.65-1.66,1.21l-3.63-1.91c-0.33-0.18-0.73-0.18-1.07,0l-3.63,1.91 c-0.84,0.44-1.82-0.27-1.66-1.21l0.69-4.04c0.06-0.37-0.06-0.75-0.33-1.01l-2.94-2.86c-0.68-0.66-0.31-1.82,0.64-1.96l4.06-0.59 c0.37-0.05,0.7-0.29,0.86-0.63l1.82-3.68C47.48,70.67,48.69,70.67,49.11,71.52z" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#F5E169" style="fill:rgb(245, 225, 105);animation-play-state:paused"/>
<path d="M45.36,19.53c1.45-0.97,1.38-14.41,0.35-14.87c5.17,2.14,7.76,7.01,8.76,11.92C51.82,16.71,48.75,17.77,45.36,19.53z" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#C33837" style="fill:rgb(195, 56, 55);animation-play-state:paused"/>
<path d="M67.65,28.76c0.02-1.36,9.21-11.17,10.26-10.76c-5.17-2.14-10.45-0.53-14.63,2.24C65.07,22.2,66.5,25.13,67.65,28.76z" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#C33837" style="fill:rgb(195, 56, 55);animation-play-state:paused"/>
<path d="M56.95,45.98L40.32,39.1c-2.3-0.95-3.39-3.58-2.44-5.88l3.44-8.31c2.85-6.89,10.75-10.16,17.64-7.31l0,0 c6.89,2.85,10.16,10.75,7.31,17.64l-3.44,8.31C61.88,45.85,59.24,46.94,56.95,45.98z" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#F2F2F3" style="fill:rgb(242, 242, 243);animation-play-state:paused"/>
<line y2="27.23" x2="49.56" y1="24.46" x1="50.71" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<line y2="31.06" x2="58.8" y1="28.29" x1="59.95" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<path d="M44.99,31.57c3.73,4.18,8.39,6.11,13.98,5.79" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="none" style="animation-play-state:paused"/>
<path d="M47.54,45.18L47.54,45.18c-1.79-0.74-2.63-2.79-1.89-4.57l2.43-5.88c1.78,1.79,3.94,2.68,6.47,2.68l-2.43,5.88 C51.37,45.08,49.32,45.92,47.54,45.18z" stroke-miterlimit="10" stroke-linejoin="round" stroke-linecap="round" stroke-width="3.5" stroke="#000000" fill="#F47E5F" style="fill:rgb(244, 126, 95);animation-play-state:paused"/>
<metadata xmlns:d="https://loading.io/stock/" style="animation-play-state:paused"><d:name style="animation-play-state:paused">toy</d:name>


<d:tags style="animation-play-state:paused">toy,scary box,clown,halloween,surprise,joke</d:tags>


<d:license style="animation-play-state:paused">by</d:license>


<d:slug style="animation-play-state:paused">7vwozz</d:slug></metadata></g><!-- generated by https://loading.io/ --></svg>